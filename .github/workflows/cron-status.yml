name: Empire Status Snapshot
on:
  schedule: [{ cron: "*/30 * * * *" }]
  workflow_dispatch:
jobs:
  snapshot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Smoke test gateway
        env:
          GATEWAY: ${{ secrets.N8N_AGENT_GATEWAY_URL }}
          N8N_TOOL_SECRET: ${{ secrets.N8N_TOOL_SECRET }}
        run: |
        copilot/fix-smoke-test-gateway-again
          # Use strict shell options to catch errors early
          set -euo pipefail

          # Validate GATEWAY is set and non-empty
          if [[ -z "${GATEWAY:-}" ]]; then
            echo "ERROR: GATEWAY environment variable is not set or empty" >&2
            exit 1
          fi

          # Extract and validate URL scheme (must be http:// or https://)
          if [[ ! "$GATEWAY" =~ ^https?:// ]]; then
            echo "ERROR: GATEWAY must start with http:// or https://" >&2
            echo "Invalid URL scheme detected" >&2
            exit 1
          fi

          # Masked debug output - show scheme and URL length without exposing secrets
          url_scheme="${GATEWAY%%://*}"
          url_length="${#GATEWAY}"
          echo "INFO: Validated GATEWAY - scheme: ${url_scheme}://, length: ${url_length} characters"

          # Retry logic with exponential backoff (up to 3 attempts)
          max_attempts=3
          attempt=1

          while [[ $attempt -le $max_attempts ]]; do
            echo "Attempt $attempt of $max_attempts..."

            # Invoke curl with proper flags and quoted variables
            if curl --fail --show-error --location --max-time 10 -sS -X POST "$GATEWAY" \
              -H "X-AGENT-KEY: $N8N_TOOL_SECRET" \
              -H "Content-Type: application/json" \
              -d '{"tool":"roi_snapshot","args":{"since":"7d","metrics":["revenue","orders"]}}' > snapshot.json; then
              echo "SUCCESS: Gateway request completed"
              echo "Result:" && cat snapshot.json
              break
            else
              exit_code=$?
              echo "WARNING: Attempt $attempt failed with exit code $exit_code" >&2

              if [[ $attempt -eq $max_attempts ]]; then
                echo "ERROR: All $max_attempts attempts failed" >&2
                exit $exit_code
              fi

              # Exponential backoff before retry (1, 2, 4 seconds for attempts 1, 2, 3)
              if [[ $attempt -eq 1 ]]; then
                sleep_time=1
              elif [[ $attempt -eq 2 ]]; then
                sleep_time=2
              else
                sleep_time=4
              fi
              echo "Retrying in ${sleep_time} seconds..." >&2
              sleep $sleep_time
              attempt=$((attempt + 1))
            fi
          done

          # Enable strict shell options for better error handling
          set -euo pipefail

          # Validate that GATEWAY is set and non-empty
          if [ -z "${GATEWAY:-}" ]; then
            echo "ERROR: GATEWAY environment variable is not set or is empty"
            exit 1
          fi

          # Validate that URL begins with http:// or https://
          if [[ ! "$GATEWAY" =~ ^https?:// ]]; then
            echo "ERROR: GATEWAY must begin with http:// or https://"
            exit 1
          fi

          # Print the GATEWAY value for debugging (will be masked by GitHub if it's a secret)
          echo "Using GATEWAY='${GATEWAY}'"

          # Call curl with proper quoting and recommended flags
          curl --fail --show-error --location --max-time 10 -X POST "${GATEWAY}" \
            -H "X-AGENT-KEY: ${N8N_TOOL_SECRET}" -H "Content-Type: application/json" \
            -d '{"tool":"roi_snapshot","args":{"since":"7d","metrics":["revenue","orders"]}}' > snapshot.json
          echo "Result:" && cat snapshot.json
 main
      - name: Append to Session Notes
        run: |
          ts=$(date -u +"%Y-%m-%d %H:%M:%SZ")
          echo "- $ts cron snapshot run" | cat - ops/SESSION_NOTES.md > ops/.tmp && mv ops/.tmp ops/SESSION_NOTES.md
      - name: Commit notes
        run: |
          git config user.name "empire-bot"
          git config user.email "bot@users.noreply.github.com"
          git add ops/SESSION_NOTES.md
          git commit -m "cron: snapshot note" || echo "no changes"
          git push
